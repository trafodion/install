#!/bin/bash

# @@@ START COPYRIGHT @@@
#
# (C) Copyright 2013-2014 Hewlett-Packard Development Company, L.P.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
# @@@ END COPYRIGHT @@@

#
# This script will configure HBase with HBase-trx
# and co-processors needed for Trafodion.  It uses
# Ambari's configs.sh script to do this.
#
# NOTE: Only for Ambari installations

###Default Values###
typeset TRAF_WORKDIR="$( cd "$( dirname "$0" )" && pwd )/.."
NODE_LIST=$(cat $TRAF_WORKDIR/node_list)
MY_NODES=$(cat $TRAF_WORKDIR/my_nodes)
node_count=$(echo $NODE_LIST | wc -w)

TRAF_BUILD=$1
AMBARI_ADMIN=$2
AMBARI_PASSWORD=$3
AMBARI_URL=$4
TRAF_VERSION=$5
HDFS_USER=$6
HBASE_USER=$7
HBASE_GROUP=$8
TRAF_USER=$9
JAVA_VERSION=${10}

#=====================================
# copy Trafodion hbase trx jar to /usr/lib/hbase/lib

cd $TRAF_WORKDIR

PORT=`echo $AMBARI_URL | sed 's/.*://'`
echo $PORT 
AMBARI_HOST=$(echo $AMBARI_URL | sed 's@:.*@@')
echo $AMBARI_HOST

# determine java version and choose corresponding jar files
echo "***INFO: Detected JAVA version $JAVA_VERSION"
if [ "$JAVA_VERSION" == "1.6" ]; then
   echo "***ERROR: JAVA 1.6 not supported for Trafodion HBase 0.98"
   exit -1
elif [ "$JAVA_VERSION" == "1.7" ]; then
	hbase_trx_jar="hbase-trx-hdp2_1-${TRAF_VERSION}.jar"
else
    echo "***ERROR: unable to determine Hadoop's java version"
    exit -1
fi
if [ ! -f export/lib/$hbase_trx_jar ]; then
    echo "***ERROR: unable to find export/lib/$hbase_trx_jar in $TRAF_BUILD"
    exit -1
fi

# if more than one node then copy to all nodes
echo "***INFO: copying $hbase_trx_jar to all nodes"
if [ $node_count -ne 1 ]; then
    pdsh $MY_NODES mkdir -p $TRAF_WORKDIR 2>/dev/null
    pdcp $MY_NODES export/lib/$hbase_trx_jar $TRAF_WORKDIR
    pdsh $MY_NODES sudo cp $TRAF_WORKDIR/$hbase_trx_jar /usr/lib/hbase/lib/
    pdsh $MY_NODES sudo chmod 644 /usr/lib/hbase/lib/$hbase_trx_jar
else
    cp export/lib/$hbase_trx_jar $TRAF_WORKDIR
    chmod 755 $TRAF_WORKDIR/$hbase_trx_jar
    sudo cp $TRAF_WORKDIR/$hbase_trx_jar /usr/lib/hbase/lib/
fi

# create new directories for bulkload if not already there
rm traf_temp_output 2>/dev/null
sudo su $HDFS_USER --command "hadoop fs -mkdir /hbase-staging" 2> traf_temp_output
if [ $? != 0 ]; then
   # ok if directory already exists
   dir_exists=$(grep "File exists" traf_temp_output | wc -l)
   if [ $dir_exists -eq 0 ]; then
      echo "***ERROR: 'hadoop fs -mkdir /hbase-staging' command failed"
      echo "***ERROR: $(cat traf_temp_output)"
      exit -1
   fi
fi
sudo su $HDFS_USER --command "hadoop fs -chown -R $HBASE_USER:$HBASE_GROUP /hbase-staging"
sudo su $HDFS_USER --command "hadoop fs -mkdir /bulkload"
if [ $? != 0 ]; then
   # ok if directory already exists
   dir_exists=$(grep "File exists" traf_temp_output | wc -l)
   if [ $dir_exists -eq 0 ]; then
      echo "***ERROR: 'hadoop fs -mkdir /bulkload' command failed"
      echo "***ERROR: $(cat traf_temp_output)"
      exit -1
   fi
fi
sudo su $HDFS_USER --command "hadoop fs -chown -R $TRAF_USER:trafodion /bulkload"

#=====================================
# change the hbase configuration using Ambari's script
AMBARI_DIR=/var/lib/ambari-server/resources/scripts
$AMBARI_DIR/configs.sh -port $PORT set $AMBARI_HOST $CLUSTER_NAME hbase-site hbase.master.distributed.log.splitting false
if [ $? != 0 ]; then
    echo "***INFO: unable to modify hbase.master.distributed.log.splitting through Ambari's configs.sh script."
    exit -1
fi
sleep 2
$AMBARI_DIR/configs.sh -port $PORT set $AMBARI_HOST $CLUSTER_NAME hbase-site hbase.coprocessor.region.classes "org.apache.hadoop.hbase.coprocessor.transactional.TrxRegionObserver,org.apache.hadoop.hbase.coprocessor.transactional.TrxRegionEndpoint,org.apache.hadoop.hbase.coprocessor.AggregateImplementation"
if [ $? != 0 ]; then
    echo "***INFO: unable to modify hbase.coprocessor.region.classes through Ambari's configs.sh script."
    exit -1
fi
sleep 2
$AMBARI_DIR/configs.sh -port $PORT set $AMBARI_HOST $CLUSTER_NAME hbase-site hbase.hregion.impl org.apache.hadoop.hbase.regionserver.transactional.TransactionalRegion
if [ $? != 0 ]; then
    echo "***INFO: unable to modify hbase.hregion.impl through Ambari's configs.sh script."
    exit -1
fi
sleep 2
$AMBARI_DIR/configs.sh -port $PORT set $AMBARI_HOST $CLUSTER_NAME hbase-site hbase.regionserver.region.split.policy org.apache.hadoop.hbase.regionserver.ConstantSizeRegionSplitPolicy
if [ $? != 0 ]; then
    echo "***INFO: unable to modify hbase.regionserver.region.split.policy through Ambari's configs.sh script."
    exit -1
fi
sleep 2 
$AMBARI_DIR/configs.sh -port $PORT set $AMBARI_HOST $CLUSTER_NAME hbase-site hbase.snapshot.enabled true
if [ $? != 0 ]; then
    echo "***INFO: unable to modify hbase.snapshot.enabled through Ambari's configs.sh script."
    exit -1
fi
sleep 2
$AMBARI_DIR/configs.sh -port $PORT set $AMBARI_HOST $CLUSTER_NAME hbase-site hbase.bulkload.staging.dir /hbase-staging
if [ $? != 0 ]; then
    echo "***INFO: unable to modify hbase.bulkload.staging.dir through Ambari's configs.sh script."
    exit -1
fi
sleep 2
$AMBARI_DIR/configs.sh -port $PORT set $AMBARI_HOST $CLUSTER_NAME hbase-site hbase.regionserver.region.transactional.tlog true
if [ $? != 0 ]; then
    echo "***INFO: unable to modify hbase.regionserver.region.transactional.tlog through Ambari's configs.sh script."
    exit -1
fi
sleep 2
echo
echo "***WARNING: Please manually restart HBase through the Ambari web GUI"
echo
exit
