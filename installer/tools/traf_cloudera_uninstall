#!/bin/bash
# @@@ START COPYRIGHT @@@
#
# (C) Copyright 2014 Hewlett-Packard Development Company, L.P.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
# @@@ END COPYRIGHT @@@

# This script will uninstall Cloudera and all its pieces

#==============================================
#Default Values

OPENSTACK_VM=$(grep openstack /etc/resolv.conf | wc -l)
MY_NODES=""
my_node_list=""
#==============================================

function print_usage {
cat << EOF
This script will uninstall Hortonworks.

Usage: $(basename $0) [options]

Options:
    --help                 Print this message and exit.
    --nodes "<node_list>"  -w separated list of nodes (within quotes)

EOF
}

#==============================================
# Parse input parameters
while [[ $# -gt 0 ]]; do
    case "$1" in
         --nodes)
             if [[ -z "$2" ]]; then
                echo "***ERROR: No value passed to param $1."
                print_usage
                exit -1
             fi
             MY_NODES=$2
             shift
             ;;
         --help)
             print_usage
             exit -1
             ;;
         *)
             echo "***ERROR: unknown parameter '$1'"
             exit -1
    esac
    shift
done

#==============================================
#Check with user if they want to preform the uninstall
echo -n "Do you want to uninstall Cloudera? (Y/N) "
read v

if [[ $v != "Y" ]] && [[ $v != "y" ]]; then
  echo "***INFO: Exiting..."
  exit
fi

if [[ $MY_NODES == "" ]]; then
  MY_NODES=$(cat ../../my_nodes)
  my_node_list=$(cat ../../node_list)
fi

if [ $OPENSTACK_VM -ne 0 ]; then
  my_node_list=`nova list |grep $vm_prefix|awk '{print $4}'`
fi
echo $MY_NODES
#==============================================
#Run Cloudera uninstall script and stop all services
sudo /usr/share/cmf/uninstall-cloudera-manager.sh

echo "***INFO: Shutdown Cloudera Manager agents on all nodes"
pdsh $MY_NODES sudo /sbin/service cloudera-scm-agent hard_stop

#==============================================
echo "***INFO: Uninstall packages"
pdsh $MY_NODES sudo yum --assumeyes remove 'cloudera-manager-*' hadoop hue-common 'bigtop-*' sqoop2-client
pdsh $MY_NODES sudo yum --assumeyes clean all

#==============================================
echo "***INFO: Remove Cloudera Manager and CDH data"
pdsh $MY_NODES sudo rm -Rf /usr/share/cmf /var/lib/cloudera* /var/cache/yum/cloudera* /var/log/cloudera* /var/run/cloudera* /opt/cloudera* /tmp/scm_prepare_node* /etc/cloudera*

pdsh $MY_NODES sudo rm -Rf /var/lib/flume-ng /var/lib/hadoop* /var/lib/hue /var/lib/oozie /var/lib/solr /var/lib/sqoop* /var/lib/zookeeper*

pdsh $MY_NODES sudo rm -Rf /dfs /mapred /yarn

pdsh $MY_NODES sudo rm -Rf /var/run/hdfs-sockets /var/run/zookeeper* /var/run/sqoop* /var/run/flume* /var/run/sqoop*

pdsh $MY_NODES sudo rm -Rf /var/log/zookeeper* /var/log/hadoop* /var/log/hive* /var/log/sqoop* /var/log/flume* /var/log/hbase* /var/log/hue*

pdsh $MY_NODES sudo rm -Rf /etc/zookeeper* /etc/hadoop* /etc/hive* /etc/sqoop* /etc/flume* /etc/hbase* /etc/hcatalog* /etc/webhcat* /etc/pig* /etc/oozie*  
 
pdsh $MY_NODES sudo rm -Rf /usr/lib/hadoop* /usr/lib/hive* /usr/lib/oozie* /usr/lib/hcatalog* /usr/lib/parquet* 

pdsh $MY_NODES sudo rm -Rf /usr/lib/alternatives/hadoop*

pdsh $MY_NODES sudo rm -Rf /tmp/hadoop*

pdsh $MY_NODES sudo rm -Rf /etc/alternatives/hadoop* /etc/alternatives/hive* /etc/alternatives/hbase* 

pdsh $MY_NODES sudo rm -Rf /var/tmp/sqoop* /var/lib/alternatives/hbase* /etc/run/webhcat* /usr/share/hue* /tmp/hadoop* /tmp/hsperfdata_zookeeper  

#==============================================
echo "***INFO: Kill any running Cloudera Manager and CDH processes that might still be running"
for u in hdfs mapred cloudera-scm hbase hue zookeeper oozie hive impala flume; do
    pdsh $MY_NODES sudo kill $(ps -u $u -o pid=) 2>/dev/null
done

#==============================================
echo "***INFO: Remove the Cloudera Manager lock file"
pdsh $MY_NODES sudo rm /tmp/.scm_prepare_node.lock

#==============================================
echo "***INFO: Remove any left over Cloudera processes"

for node in $my_node_list
do
  if [ $node == `uname -n` ]; then
    pid=$(sudo netstat -anp | grep 9000 | awk  '{print $7}' | sed 's/ *\/.*//')
    if [[ $pid != "" ]]; then
      kill -9 $pid
    fi
  else
    pid=$(pdsh -w $node sudo netstat -anp | grep 9000 | awk  '{print $8}' | sed 's/ *\/.*//')
    if [[ $pid != "" ]]; then
       pdsh -w $node kill -9 $pid
    fi
  fi

  if [ $node == `uname -n` ]; then
    pid=$(sudo netstat -anp | grep 9001 | awk  '{print $7}' | sed 's/ *\/.*//')
    if [[ $pid != "" ]];then
      kill -9 $pid
    fi
  else
    pid=$(pdsh -w $node sudo netstat -anp | grep 9001 | awk  '{print $8}' | sed 's/ *\/.*//')
    if [[ $pid != "" ]]; then
      pdsh -w $node kill -9 $pid
    fi
  fi

done

pdsh $MY_NODES sudo pkill cloudera-scm
#==============================================
echo "***INFO: Removing Cloudera symbolic directory links"

for node in $my_node_list
do
  fileFound=$(pdsh -w $node find / -wholename /etc/alternatives/hadoop-conf | wc -l)

  if [[ $fileFound -eq 1 ]]; then
     pdsh -w $node command rm -r /etc/alternatives/hadoop-conf
     fileFound=0
  fi

  fileFound=$(pdsh -w $node find / -wholename /etc/alternatives/hbase-conf | wc -l)

  if [[ $fileFound -eq 1 ]]; then
     pdsh -w $node command rm -r /etc/alternatives/hbase-conf
     fileFound=0
  fi

  fileFound=$(pdsh -w $node find / -wholename /etc/alternatives/hive-conf | wc -l)

  if [[ $fileFound -eq 1 ]]; then
     pdsh -w command rm -r /etc/alternatives/hive-conf
     fileFound=0
  fi
done
#==============================================
echo "***INFO: Cloudera Manager uninstalled."
